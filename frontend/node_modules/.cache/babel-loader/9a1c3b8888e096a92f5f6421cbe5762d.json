{"ast":null,"code":"var _jsxFileName = \"/home/manju/Desktop/frontend/src/components/cart-dropdown/CartDropdown.js\";\nimport React from 'react';\nimport CustomButton from '../custom-button/CustomButton';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport CartItem from '../cart-item/CartItem';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport './CartDropdown.scss';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"empty-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Go TO CHECKOUT\"));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n}); // Work even not writing `mapDispatchToProps` because `connect` automatically pass the `dispatch` if there is no second args in `connect`.\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/manju/Desktop/frontend/src/components/cart-dropdown/CartDropdown.js"],"names":["React","CustomButton","connect","withRouter","CartItem","selectCartItems","createStructuredSelector","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAO,qBAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AACzD,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBACpB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAKC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,CADF,eAWE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbJ,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,MAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,CADF;AAsBD,CAvBD;;AAyBA,MAAMU,eAAe,GAAGX,wBAAwB,CAAC;AAC/CG,EAAAA,SAAS,EAAEJ;AADoC,CAAD,CAAhD,C,CAIA;;AACA,eAAeF,UAAU,CAACD,OAAO,CAACe,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport CustomButton from '../custom-button/CustomButton';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport CartItem from '../cart-item/CartItem';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport './CartDropdown.scss';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => {\n  return (\n    <div className='cart-dropdown'>\n      <div className='cart-items'>\n        {cartItems.length ? (\n          cartItems.map(cartItem => (\n            <CartItem key={cartItem.id} item={cartItem} />\n          ))\n        ) : (\n          <span className='empty-message'>Your cart is empty</span>\n        )}\n      </div>\n      {/* `history.push` instead of `<Link>` because using `<CustomButton>` */}\n      <CustomButton\n        onClick={() => {\n          history.push('/checkout');\n          dispatch(toggleCartHidden());\n        }}\n      >\n        Go TO CHECKOUT\n      </CustomButton>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\n// Work even not writing `mapDispatchToProps` because `connect` automatically pass the `dispatch` if there is no second args in `connect`.\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}